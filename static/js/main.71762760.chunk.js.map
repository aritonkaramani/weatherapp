{"version":3,"sources":["Assets/PNG/512/cloudy.png","Assets/PNG/512/rain.png","Assets/PNG/512/day_clear.png","Assets/PNG/512/thunder.png","Assets/PNG/512/snow.png","Assets/PNG/512/fog.png","App.jsx","index.js"],"names":["App","api","useState","query","setQuery","forecast","setForecast","location","setLocation","weatherImage","key","icon","Rain","Clouds","Sun","Thunder","Snow","Fog","useEffect","axios","get","then","result","data","lat","lon","week","date","window","Date","i","setDate","getDate","push","String","slice","todaysDate","className","type","placeholder","onChange","e","target","value","onKeyPress","evt","console","log","length","alert","name","country","daily","Math","round","current","temp","weather","main","src","alt","day","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71762760.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cloudy.05d4a3c6.png\";","export default __webpack_public_path__ + \"static/media/rain.5ef89ffa.png\";","export default __webpack_public_path__ + \"static/media/day_clear.d96c23a5.png\";","export default __webpack_public_path__ + \"static/media/thunder.d3fe1a1f.png\";","export default __webpack_public_path__ + \"static/media/snow.b4ba2cca.png\";","export default __webpack_public_path__ + \"static/media/fog.ec2d8c36.png\";","import './App.scss';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Clouds from '../src/Assets/PNG/512/cloudy.png';\nimport Rain from '../src/Assets/PNG/512/rain.png';\nimport Sun from '../src/Assets/PNG/512/day_clear.png';\nimport Thunder from '../src/Assets/PNG/512/thunder.png';\nimport Snow from '../src/Assets/PNG/512/snow.png';\nimport Fog from '../src/Assets/PNG/512/fog.png';\n\nfunction App() {\n\n  const api = {\n    key: \"29b3245b274832af2341a683f1348817\",\n    base: \"api.openweathermap.org/data/2.5/\",\n  }\n  const [query,setQuery] = useState('');\n  const [forecast,setForecast] = useState({});\n  const [location,setLocation] = useState('Malmö, SE');\n  \n\n\n  function weatherImage(key){\n\n    let icon = null; \n    switch (key) {\n      case \"Drizzle\":\n      case \"Rain\":\n      icon = Rain;\n      break;\n      case \"Clouds\":\n      icon = Clouds;\n      break;\n      case \"Sunny\":\n      icon = Sun;\n      break;\n      case \"Clear\":\n      icon = Sun;\n      break;\n      case \"Thunderstorm\":\n      icon = Thunder;\n      break;\n      case \"Snow\":\n      icon = Snow;\n      break;\n      case \"Mist\":\n      case \"Smoke\":\n      case \"Haze\":\n      case \"Dust\":\n      case \"Fog\":\n      case \"Sand\":\n      case \"Ash\":\n      case \"Squall\":\n      case \"Tornado\":\n      icon = Fog;\n      break;\n      default:\n        break;\n    }\n    return icon;\n\n  }\n  const cordLocation = (lat, lon) => {\n    axios.get(`https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=1&appid=${api.key}`)\n    .then(result => {\n      setLocation(`${result.data[0].name}, ${result.data[0].country}`)\n    }\n    )\n  }\n\n  const onEnterPress = (evt) => {\n    if(evt.key === \"Enter\"){\n      console.log(axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=1&appid=${api.key}`))\n      axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=1&appid=${api.key}`) \n     .then(result => {\n       console.log(result.data)\n       if(result.data.length === 0){\n         alert(\"Location Does Not Exist\")\n         setQuery('')\n       }else{\n        axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${result.data[0].lat}&lon=${result.data[0].lon}&exclude=minutely,hourly,alerts&units=metric&appid=${api.key}`)\n      .then(result => {\n        setForecast(result.data)\n        setQuery('')\n        cordLocation(result.data.lat,result.data.lon)\n        console.log(result.data)\n      \n  })\n       }\n      \n})    \n}  \n}\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=Malmo&limit=1&appid=${api.key}`)\n     .then(result => {\n      axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${result.data[0].lat}&lon=${result.data[0].lon}&exclude=minutely,hourly,alerts&units=metric&appid=${api.key}`)\n      .then(result => {\n        setForecast(result.data)\n  })\n})    \n  },[])\n\n\n  var week = [];\n  let date = new window.Date();\n  for(let i = 0; i<7; i++){\n    date.setDate(date.getDate() + 1);\n    week.push(String(date).slice(0,3));\n  }\n  let todaysDate = String(new window.Date());\n  todaysDate = todaysDate.slice(3,15);\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <input type=\"text\" placeholder=\"Search for city...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={onEnterPress}/>\n        {(typeof forecast.daily != \"undefined\") ? (\n\n          \n          <div className=\"textwrapper\">\n        <div className=\"location-box\">\n          <div className=\"location\">{location}</div>\n          <div className=\"date\">{todaysDate}</div>\n        </div>\n        <div className=\"weatherbox\">\n          <div className=\"temp\">{Math.round(forecast.current.temp)}°C</div>\n          <div className=\"weather\">{forecast.current.weather[0].main}</div>\n          <div className=\"weatherIcon\"><img src={weatherImage(forecast.current.weather[0].main)} alt=\"\" /></div>\n        </div>\n        <div className=\"forecast\">\n          <ul>\n            <li>\n              {week[0]}\n              <span></span>\n              {Math.round(forecast.daily[0].temp.day)}°C\n              <span></span>\n              <img src={weatherImage(forecast.daily[0].weather[0].main)} alt=\"\" />\n            </li>\n            <li>\n              {week[1]}\n              <span></span>\n              {Math.round(forecast.daily[1].temp.day)}°C\n              <span></span>\n              <img src={weatherImage(forecast.daily[1].weather[0].main)} alt=\"\" />\n            </li>\n            <li>\n              {week[2]}\n              <span></span>\n              {Math.round(forecast.daily[2].temp.day)}°C\n              <span></span>\n              <img src={weatherImage(forecast.daily[2].weather[0].main)} alt=\"\" />\n            </li>\n            <li>\n              {week[3]}\n              <span></span>\n              {Math.round(forecast.daily[3].temp.day)}°C\n              <span></span>\n              <img src={weatherImage(forecast.daily[3].weather[0].main)} alt=\"\" />\n            </li>\n            <li>\n              {week[4]}\n              <span></span>\n              {Math.round(forecast.daily[4].temp.day)}°C\n              <span></span>\n              <img src={weatherImage(forecast.daily[4].weather[0].main)} alt=\"\" />\n            </li>\n            <li>\n              {week[5]}\n              <span></span>\n              {Math.round(forecast.daily[5].temp.day)}°C\n              <span></span>\n              <img src={weatherImage(forecast.daily[5].weather[0].main)} alt=\"\" />\n            </li>\n            <li>\n              {week[6]}\n              <span></span>\n              {Math.round(forecast.daily[6].temp.day)}°C\n              <span></span>\n              <img src={weatherImage(forecast.daily[6].weather[0].main)} alt=\"\" />\n            </li>\n          </ul>\n        </div>\n        </div>\n        ) : ('')} \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}